version: "3.9"

services:

  # 8081
  goauth:
    build: ./goauth/build
    env_file:
      - ./backend.env
    volumes:
      - /home/alphaboi/services/goauth/logs:/usr/src/goauth/logs
      - /home/alphaboi/services/goauth/config:/usr/src/goauth/config
    networks:
      - backend
    restart: always
    stop_signal: SIGTERM
    depends_on:
      - "consul"
      - "redis"
      - "rabbitmq"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '100m'

  # 8082
  fantahsea:
    build: ./fantahsea/build
    env_file:
      - ./backend.env
    volumes:
      - /home/alphaboi/services/fantahsea/logs:/usr/src/fantahsea/logs
      - /home/alphaboi/services/fantahsea/config:/usr/src/fantahsea/config
    networks:
      - backend
    restart: always
    stop_signal: SIGTERM
    depends_on:
      - "consul"
      - "redis"
      - "rabbitmq"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '100m'

  # 8083
  dtaskgo:
    build: ./dtaskgo/build
    env_file:
      - ./backend.env
    volumes:
      - /home/alphaboi/services/dtaskgo/logs:/usr/src/dtaskgo/logs
      - /home/alphaboi/services/dtaskgo/config:/usr/src/dtaskgo/config
    networks:
      - backend
    restart: always
    stop_signal: SIGTERM
    depends_on:
      - "consul"
      - "redis"
      - "rabbitmq"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '100m'

  # 8084
  mini-fstore:
    build: ./mini-fstore/build
    env_file:
      - ./backend.env
    volumes:
      - /home/alphaboi/fstore/:/home/alphaboi/fstore/
      - /home/alphaboi/services/mini-fstore/logs:/usr/src/logs
      - /home/alphaboi/services/mini-fstore/config:/usr/src/config
    networks:
      - backend
    restart: always
    stop_signal: SIGTERM
    depends_on:
      - "consul"
      - "redis"
      - "rabbitmq"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '300m'

  # 8085
  hammer:
    build: ./hammer/build
    env_file:
      - ./backend.env
    volumes:
      - /home/alphaboi/services/hammer/logs:/usr/src/logs
      - /home/alphaboi/services/hammer/config:/usr/src/config
      - /tmp/hammer/temp:/tmp
    networks:
      - backend
    restart: always
    stop_signal: SIGTERM
    depends_on:
      - "consul"
      - "redis"
      - "rabbitmq"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '200m'

  # 8086
  vfm:
    build: ./vfm/build
    env_file:
      - ./backend.env
    volumes:
      - /home/alphaboi/services/vfm/logs:/usr/src/logs
      - /home/alphaboi/services/vfm/config:/usr/src/config
    networks:
      - backend
    restart: always
    stop_signal: SIGTERM
    depends_on:
      - "consul"
      - "redis"
      - "rabbitmq"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '100m'

  # 8087
  logbot:
    build: ./logbot/build
    env_file:
      - ./backend.env
    volumes:
      - /home/alphaboi/services/logbot/config:/usr/src/config
      - /home/alphaboi/services/logbot/logs:/usr/src/logs
      - /home/alphaboi/services/hammer/logs/hammer.log:/usr/src/logs/watch/hammer.log
      - /home/alphaboi/services/fantahsea/logs/fantahsea.log:/usr/src/logs/watch/fantahsea.log
      - /home/alphaboi/services/vfm/logs/vfm.log:/usr/src/logs/watch/vfm.log
      - /home/alphaboi/services/mini-fstore/logs/mini-fstore.log:/usr/src/logs/watch/mini-fstore.log
      - /home/alphaboi/services/goauth/logs/goauth.log:/usr/src/logs/watch/goauth.log
      - /home/alphaboi/services/dtaskgo/logs/dtaskgo.log:/usr/src/logs/watch/dtaskgo.log
      - /home/alphaboi/services/auth-gateway/logs/auth-gateway.log:/usr/src/logs/watch/auth-gateway.log
      - /home/alphaboi/services/user-vault/logs/user-vault.log:/usr/src/logs/watch/user-vault.log
    networks:
      - backend
    restart: always
    stop_signal: SIGTERM
    depends_on:
      - "consul"
      - "redis"
      - "rabbitmq"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '100m'

  # 8088
  event-pump:
    build: ./event-pump/build
    env_file:
      - ./backend.env
    volumes:
      - /home/alphaboi/services/event-pump/config:/usr/src/config
      - /home/alphaboi/services/event-pump/logs:/usr/src/logs
    networks:
      - backend
    restart: always
    stop_signal: SIGTERM
    depends_on:
      - "consul"
      - "redis"
      - "rabbitmq"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '200m'

  # 8089
  user-vault:
    build: ./user-vault/build
    env_file:
      - ./backend.env
    volumes:
      - /home/alphaboi/services/user-vault/config:/usr/src/config
      - /home/alphaboi/services/user-vault/logs:/usr/src/logs
    networks:
      - backend
    restart: always
    stop_signal: SIGTERM
    depends_on:
      - "consul"
      - "redis"
      - "rabbitmq"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '100m'

  # 7070
  gatekeeper:
    build: ./gatekeeper/build
    env_file:
      - ./backend.env
    volumes:
      - /home/alphaboi/services/gatekeeper/config:/usr/src/config
      - /home/alphaboi/services/gatekeeper/logs:/usr/src/logs
    networks:
      - backend
    restart: always
    stop_signal: SIGTERM
    depends_on:
      - "consul"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '300m'

  nginx:
    image: nginx:alpine
    volumes:
      - /home/alphaboi/services/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /home/alphaboi/services/nginx/cert:/etc/nginx/cert
      - /home/alphaboi/services/nginx/html:/usr/share/nginx/html
      - /home/alphaboi/services/nginx/logs:/var/log/nginx
    ports:
      - "0.0.0.0:443:443"
    networks:
      - backend
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '300m'

  redis:
    image: redis:7.0.5
    networks:
      - backend
    restart: always
    volumes:
      - /home/alphaboi/services/redis/data:/data

  rabbitmq:
    hostname: 'myrabbit'
    image: rabbitmq:3.12.0-management-alpine
    ports:
      - "0.0.0.0:15672:15672"
    env_file:
      - ./backend.env
    volumes:
      - /home/alphaboi/services/rabbitmq/data:/var/lib/rabbitmq/mnesia/
    networks:
      - backend
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '500m'

  consul:
    image: consul:1.13.2
    networks:
      - backend
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '500m'

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - '/proc:/host/proc:ro'
      - '/sys:/host/sys:ro'
      - '/:/rootfs:ro'
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - backend
    expose:
      - 9100
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '500m'

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    user: root
    volumes:
      - /home/alphaboi/services/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /home/alphaboi/services/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=200h'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '500m'

  grafana:
    image: grafana/grafana:7.5.7
    restart: unless-stopped
    volumes:
      - /home/alphaboi/services/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - /home/alphaboi/services/grafana/grafana-data:/var/lib/grafana
    env_file:
      - /home/alphaboi/services/grafana/config.monitoring
    user: root
    ports:
      - "0.0.0.0:3000:3000"
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '500m'

networks:
  backend:
