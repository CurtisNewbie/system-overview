# user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 4096;
    # multi_accept on;
}

http {

    ##
    # Basic Settings
    ##
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    proxy_read_timeout 300s;
    proxy_connect_timeout 75s;

    # http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
    # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_request_buffering
    # client_body_buffer_size 0;

    client_max_body_size 0;
    proxy_buffering off;
    proxy_request_buffering off;

    # server_tokens off;
    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##
    gzip off;

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;


    ## -------------------------------------------------
    #
    # Custom setting for bolobao
    #
    ## ------------------------------------------------

#    server {
#      listen 80 default_server;
#      listen  [::]:80 default_server;
#      server_name localhost;
#
#      return 301 https://$host$request_uri;
#    }
#

    server {

        listen 3100 ssl;
        ssl_certificate /etc/nginx/cert/curtisnewbie.com.crt;
        ssl_certificate_key /etc/nginx/cert/curtisnewbie.com.key;

        location / {
            proxy_redirect off;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://curtisnewbie.com:8100;
        }

    }

    server {

        listen 3000 ssl;
        ssl_certificate /etc/nginx/cert/curtisnewbie.com.crt;
        ssl_certificate_key /etc/nginx/cert/curtisnewbie.com.key;

        # set DNS resolver as Docker internal DNS
        resolver 127.0.0.11 valid=10s;
        resolver_timeout 5s;

        location / {
            proxy_redirect off;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://grafana:3000;
        }

    }

    server {

        listen 443 ssl;
        ssl_certificate /etc/nginx/cert/curtisnewbie.com.crt;
        ssl_certificate_key /etc/nginx/cert/curtisnewbie.com.key;
        root /usr/share/nginx/html/bolobao;

        # set DNS resolver as Docker internal DNS
        resolver 127.0.0.11 valid=10s;
        resolver_timeout 5s;

        index index.html;

        location / {
            try_files $uri $uri/ @backend;
        }

        location @backend {
            proxy_redirect off;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://gatekeeper:7070;
        }

    }

}

